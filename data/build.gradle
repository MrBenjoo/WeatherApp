apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def config = rootProject.extensions.getByName("ext")

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android {
        kotlinOptions {
            jvmTarget = '1.8'
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

}

dependencies {
    implementation project(":domain")

    // ---- COMMON DEPENDENCIES ----
    implementation config.commonDependency.legacySupportV4
    implementation config.commonDependency.standardLibraryJDK8
    implementation config.commonDependency.coroutinesAndroid

    // ---- NETWORK DEPENDENCIES ----
    implementation config.networkDependencies.retrofit2
    implementation config.networkDependencies.retrofit2MoshiConverter

    // ---- TEST DEPENDENCIES ----
    testImplementation config.testDependencies.junitApi
    testImplementation config.testDependencies.junitEngine

    // ---- ANDROID TEST DEPENDENCIES ----
    androidTestImplementation config.androidTestDependencies.coreTesting
    androidTestImplementation config.androidTestDependencies.testExtJunit
    androidTestImplementation config.androidTestDependencies.testRunner
}
